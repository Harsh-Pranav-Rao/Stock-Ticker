{"ast":null,"code":"var _jsxFileName = \"/Users/pranav/Desktop/Stock Ticker 0/frontend/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TickerTape from './components/tickerTape/TickerTape';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [stockData, setStockData] = useState([]);\n  const [stockDataKeys, setStockDataKeys] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    console.log(\"in use effect\");\n    fetch(`/api`).then(response => response.json()).then(data => {\n      let dkey = Object.keys(data);\n      setStockData(data);\n      setStockDataKeys(dkey);\n      setIsLoading(false);\n      console.log(stockData);\n      console.log(stockDataKeys);\n    });\n  }, []);\n  function handleButtonClick(sectorName) {\n    console.log(\"Button clicked with sector:\", sectorName);\n\n    // Fetch data for the selected sector\n    fetch(`/api?sector=${sectorName}`).then(response => response.json()).then(data => {\n      let dkey = Object.keys(data);\n      setStockData(data);\n      setStockDataKeys(dkey);\n      setIsLoading(false);\n      console.log(stockData);\n      console.log(stockDataKeys);\n    });\n  }\n  function handleDropdownChange(event) {\n    const selectedOption = event.target.value;\n    setSelectedSector(selectedOption); // Update the selected sector when an option is selected\n    handleButtonClick(selectedOption); // Trigger the function with the selected sector\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 14\n    }, this); // Show loading message\n  } else if (stockDataKeys.length > 0) {\n    /* 'Technology Services', 'Consumer Non-Durables', 'Finance', 'Health Technology', 'Electronic Technology', 'Retail Trade', 'Distribution Services', 'Consumer Durables', 'Producer Manufacturing', 'Commercial Services', 'Industrial Services', 'Utilities', 'Process Industries', 'Non-Energy Minerals', 'Transportation', 'Health Services', 'Energy Minerals', 'Communications' */\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleDropdownChange,\n          value: selectedSector,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a sector\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Consumer Services\",\n            children: \"Consumer Services\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Commercial Services\",\n            children: \"Commercial Services\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TickerTape, {\n        className: \"tickerTape\",\n        stockDataKeys: stockDataKeys,\n        stockData: stockData,\n        darkMode: darkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"DMbutton\",\n        onClick: () => {\n          setDarkMode(prev => !prev);\n          console.log(darkMode);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"material-icons\",\n          children: [darkMode ? 'wb_sunny' : 'brightness_3', \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 14\n    }, this);\n  }\n}\n_s(App, \"UBCqKpnhf0UtdsUXBqDsZ2q16R8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TickerTape","jsxDEV","_jsxDEV","App","_s","stockData","setStockData","stockDataKeys","setStockDataKeys","isLoading","setIsLoading","darkMode","setDarkMode","console","log","fetch","then","response","json","data","dkey","Object","keys","handleButtonClick","sectorName","handleDropdownChange","event","selectedOption","target","value","setSelectedSector","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","onChange","selectedSector","onClick","prev","_c","$RefreshReg$"],"sources":["/Users/pranav/Desktop/Stock Ticker 0/frontend/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TickerTape from './components/tickerTape/TickerTape';\nimport './App.css';\n\nfunction App() {\n  const [stockData, setStockData] = useState([]);\n  const [stockDataKeys, setStockDataKeys] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [darkMode,setDarkMode] = useState(false)\n\n\n\n  useEffect(() => {\n    console.log(\"in use effect\")\n    fetch(`/api`)\n      .then(response => response.json())\n      .then(data => {\n        let dkey = Object.keys(data);\n        setStockData(data);\n        setStockDataKeys(dkey);\n        setIsLoading(false);\n        console.log(stockData)\n        console.log(stockDataKeys)\n      });\n  }, []);\n\n\n  function handleButtonClick(sectorName) {\n    console.log(\"Button clicked with sector:\", sectorName);\n    \n    // Fetch data for the selected sector\n    fetch(`/api?sector=${sectorName}`)\n      .then(response => response.json())\n      .then(data => {\n        let dkey = Object.keys(data);\n        setStockData(data);\n        setStockDataKeys(dkey);\n        setIsLoading(false);\n        console.log(stockData)\n        console.log(stockDataKeys)\n      });\n  }\n\n  function handleDropdownChange(event) {\n    const selectedOption = event.target.value;\n    setSelectedSector(selectedOption); // Update the selected sector when an option is selected\n    handleButtonClick(selectedOption); // Trigger the function with the selected sector\n  }\n  \n\n\n\n    if (isLoading) {\n      return <div>Loading...</div>; // Show loading message\n    } else if (stockDataKeys.length > 0) {\n    \n      /* 'Technology Services', 'Consumer Non-Durables', 'Finance', 'Health Technology', 'Electronic Technology', 'Retail Trade', 'Distribution Services', 'Consumer Durables', 'Producer Manufacturing', 'Commercial Services', 'Industrial Services', 'Utilities', 'Process Industries', 'Non-Energy Minerals', 'Transportation', 'Health Services', 'Energy Minerals', 'Communications' */\n      return (\n        <div className=\"app-container\">\n          <div>\n            <select onChange={handleDropdownChange} value={selectedSector}>\n              <option value=\"\">Select a sector</option>\n              <option value=\"Consumer Services\">Consumer Services</option>\n              <option value=\"Commercial Services\">Commercial Services</option>\n              {/* Add more sectors here */}\n            </select>\n          </div>\n\n          <TickerTape className=\"tickerTape\" stockDataKeys={stockDataKeys} stockData={stockData} darkMode={darkMode}/>\n          <button className=\"DMbutton\" onClick={()=>{setDarkMode(prev => !prev); console.log(darkMode)}}>\n          <i className=\"material-icons\">\n            {darkMode ? 'wb_sunny' : 'brightness_3'} {/* Use 'wb_sunny' for sun icon and 'brightness_3' for moon icon */}\n          </i>\n          </button>\n\n      </div>\n      );\n    } else {\n      return <div>No data available.</div>;\n    }\n\n\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}