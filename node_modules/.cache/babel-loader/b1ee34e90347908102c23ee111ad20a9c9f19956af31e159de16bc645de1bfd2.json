{"ast":null,"code":"var _jsxFileName = \"/Users/pranav/Desktop/Stock Ticker 0/frontend/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TickerTape from './components/tickerTape/TickerTape';\nimport './App.css';\nimport sectors from './sectorData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [stockData, setStockData] = useState([]);\n  const [stockDataKeys, setStockDataKeys] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [darkMode, setDarkMode] = useState(false);\n  const [selectedSector, setSelectedSector] = useState('');\n  const [isFetching, setIsFetching] = useState(false);\n  useEffect(() => {\n    console.log(\"in use effect\");\n    fetch(`/api`).then(response => response.json()).then(data => {\n      let dkey = Object.keys(data);\n      setStockData(data);\n      setStockDataKeys(dkey);\n      setIsLoading(false);\n      console.log(stockData);\n      console.log(stockDataKeys);\n    });\n  }, []);\n  function handleButtonClick(sectorName) {\n    console.log(\"Button clicked with sector:\", sectorName);\n    setIsFetching(true);\n\n    // Fetch data for the selected sector\n    fetch(`/api?sector=${sectorName}`).then(response => response.json()).then(data => {\n      let dkey = Object.keys(data);\n      setStockData(data);\n      setStockDataKeys(dkey);\n      setIsLoading(false);\n      setIsFetching(false);\n      console.log(stockData);\n      console.log(stockDataKeys);\n    });\n  }\n  function handleDropdownChange(event) {\n    const selectedOption = event.target.value;\n    setSelectedSector(selectedOption); // Update the selected sector when an option is selected\n    handleButtonClick(selectedOption); // Trigger the function with the selected sector\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 14\n    }, this); // Show loading message\n  } else if (stockDataKeys.length > 0) {\n    /* 'Technology Services', 'Consumer Non-Durables', 'Finance', 'Health Technology', 'Electronic Technology', 'Retail Trade', 'Distribution Services', 'Consumer Durables', 'Producer Manufacturing', 'Commercial Services', 'Industrial Services', 'Utilities', 'Process Industries', 'Non-Energy Minerals', 'Transportation', 'Health Services', 'Energy Minerals', 'Communications' */\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Dropdown\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleDropdownChange,\n          value: selectedSector,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Top 5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), sectors.map(sector => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: sector,\n            children: sector\n          }, sector, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          borderColor: darkMode ? \"white\" : \"black\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), isFetching ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(TickerTape, {\n          className: \"tickerTape\",\n          stockDataKeys: stockDataKeys,\n          stockData: stockData,\n          darkMode: darkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          borderColor: darkMode ? \"white\" : \"black\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"DMbutton\",\n        onClick: () => {\n          setDarkMode(prev => !prev);\n          console.log(darkMode);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"material-icons\",\n          children: [darkMode ? 'wb_sunny' : 'brightness_3', \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 14\n    }, this);\n  }\n}\n_s(App, \"jmWwdN+tulgkvKGAEW0NVW3aJiA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TickerTape","sectors","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","stockData","setStockData","stockDataKeys","setStockDataKeys","isLoading","setIsLoading","darkMode","setDarkMode","selectedSector","setSelectedSector","isFetching","setIsFetching","console","log","fetch","then","response","json","data","dkey","Object","keys","handleButtonClick","sectorName","handleDropdownChange","event","selectedOption","target","value","class","fileName","_jsxFileName","lineNumber","columnNumber","length","className","children","onChange","map","sector","style","borderColor","onClick","prev","_c","$RefreshReg$"],"sources":["/Users/pranav/Desktop/Stock Ticker 0/frontend/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TickerTape from './components/tickerTape/TickerTape';\nimport './App.css';\nimport sectors from './sectorData';\n\nfunction App() {\n  const [stockData, setStockData] = useState([]);\n  const [stockDataKeys, setStockDataKeys] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [darkMode,setDarkMode] = useState(false)\n  const [selectedSector, setSelectedSector] = useState('');\n  const [isFetching, setIsFetching] = useState(false); \n\n\n\n  useEffect(() => {\n    console.log(\"in use effect\")\n    fetch(`/api`)\n      .then(response => response.json())\n      .then(data => {\n        let dkey = Object.keys(data);\n        setStockData(data);\n        setStockDataKeys(dkey);\n        setIsLoading(false);\n        console.log(stockData)\n        console.log(stockDataKeys)\n      });\n  }, []);\n\n\n  function handleButtonClick(sectorName) {\n    console.log(\"Button clicked with sector:\", sectorName);\n\n    setIsFetching(true);\n    \n    // Fetch data for the selected sector\n    fetch(`/api?sector=${sectorName}`)\n      .then(response => response.json())\n      .then(data => {\n        let dkey = Object.keys(data);\n        setStockData(data);\n        setStockDataKeys(dkey);\n        setIsLoading(false);\n        setIsFetching(false);\n        console.log(stockData)\n        console.log(stockDataKeys)\n      });\n  }\n\n  function handleDropdownChange(event) {\n    const selectedOption = event.target.value;\n    setSelectedSector(selectedOption); // Update the selected sector when an option is selected\n    handleButtonClick(selectedOption); // Trigger the function with the selected sector\n  }\n  \n\n\n\n    if (isLoading) {\n      return <div class=\"loader\"></div> // Show loading message\n    }\n    \n    else if (stockDataKeys.length > 0) {\n    \n      /* 'Technology Services', 'Consumer Non-Durables', 'Finance', 'Health Technology', 'Electronic Technology', 'Retail Trade', 'Distribution Services', 'Consumer Durables', 'Producer Manufacturing', 'Commercial Services', 'Industrial Services', 'Utilities', 'Process Industries', 'Non-Energy Minerals', 'Transportation', 'Health Services', 'Energy Minerals', 'Communications' */\n      return (\n        <div className=\"app-container\">\n          <div className='Dropdown'>\n            <select onChange={handleDropdownChange} value={selectedSector}>\n              <option value=\"\">Top 5</option>\n              {sectors.map(sector =>(\n                <option key = {sector} value={sector}>{sector}</option>\n              ))}\n            </select>\n          </div>\n\n          <hr style={{borderColor:darkMode?\"white\":\"black\"}}/>  \n              {isFetching ? (\n            <div className=\"loader\"></div>\n          ) : (\n            <>\n            \n            <TickerTape\n              className=\"tickerTape\"\n              stockDataKeys={stockDataKeys}\n              stockData={stockData}\n              darkMode={darkMode}\n            />\n          \n            </>\n          )}\n          <hr style={{borderColor:darkMode?\"white\":\"black\"}}/>\n          <button className=\"DMbutton\" onClick={()=>{setDarkMode(prev => !prev); console.log(darkMode)}}>\n          <i className=\"material-icons\">\n            {darkMode ? 'wb_sunny' : 'brightness_3'} {/* Use 'wb_sunny' for sun icon and 'brightness_3' for moon icon */}\n          </i>\n          </button>\n\n      </div>\n      );\n    } else {\n      return <div>No data available.</div>;\n    }\n\n\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}