{"ast":null,"code":"var _jsxFileName = \"/Users/pranav/Desktop/Stock Ticker 0/frontend/my-app/src/components/tickerTape/TickerTape.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Company from '../company/Company';\nimport './TickerTape.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TickerTape({\n  stockData,\n  darkMode\n}) {\n  _s();\n  const tickerRef = useRef(null);\n  const [tickerPosition, setTickerPosition] = useState(0);\n  const tickerWidth = 100; // Adjust this to the width of your ticker item\n  const screenWidth = window.innerWidth;\n  useEffect(() => {\n    const ticker = tickerRef.current;\n    let animationFrameId;\n    setTickerPosition(screenWidth);\n    const updateTickerPosition = () => {\n      setTickerPosition(prevPosition => {\n        const newPosition = prevPosition - 1;\n        return newPosition <= -tickerWidth ? tickerWidth : newPosition;\n      });\n      animationFrameId = requestAnimationFrame(updateTickerPosition);\n    };\n    updateTickerPosition();\n    return () => {\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, [stockData, screenWidth]); // Use stockData as a dependency\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ticker-container\",\n    style: {\n      backgroundColor: darkMode ? 'black' : 'white'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: tickerRef,\n      className: \"ticker\",\n      style: {\n        transform: `translateX(-${tickerPosition}px)`,\n        backgroundColor: darkMode ? 'black' : 'white'\n      },\n      children: Object.keys(stockData).map(key => {\n        const dataItem = stockData[key];\n        const value = ((dataItem[\"c\"] - dataItem[\"o\"]) / dataItem[\"o\"] * 100).toFixed(2);\n        return /*#__PURE__*/_jsxDEV(Company, {\n          name: key,\n          value: value,\n          darkMode: darkMode\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(TickerTape, \"WwktqLCWstFmRK0SMf9FC5OYpS0=\");\n_c = TickerTape;\nexport default TickerTape;\nvar _c;\n$RefreshReg$(_c, \"TickerTape\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Company","jsxDEV","_jsxDEV","TickerTape","stockData","darkMode","_s","tickerRef","tickerPosition","setTickerPosition","tickerWidth","screenWidth","window","innerWidth","ticker","current","animationFrameId","updateTickerPosition","prevPosition","newPosition","requestAnimationFrame","cancelAnimationFrame","className","style","backgroundColor","children","ref","transform","Object","keys","map","key","dataItem","value","toFixed","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pranav/Desktop/Stock Ticker 0/frontend/my-app/src/components/tickerTape/TickerTape.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Company from '../company/Company';\nimport './TickerTape.css';\n\nfunction TickerTape({ stockData, darkMode }) {\n  const tickerRef = useRef(null);\n  const [tickerPosition, setTickerPosition] = useState(0);\n  const tickerWidth = 100; // Adjust this to the width of your ticker item\n  const screenWidth = window.innerWidth;\n\n  useEffect(() => {\n    const ticker = tickerRef.current;\n    let animationFrameId;\n\n    setTickerPosition(screenWidth);\n\n    const updateTickerPosition = () => {\n      setTickerPosition((prevPosition) => {\n        const newPosition = prevPosition - 1;\n        return newPosition <= -tickerWidth ? tickerWidth : newPosition;\n      });\n\n      animationFrameId = requestAnimationFrame(updateTickerPosition);\n    };\n\n    updateTickerPosition();\n\n    return () => {\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, [stockData, screenWidth]); // Use stockData as a dependency\n\n  return (\n    <div className=\"ticker-container\" style={{ backgroundColor: darkMode ? 'black' : 'white' }}>\n      <div\n        ref={tickerRef}\n        className=\"ticker\"\n        style={{ transform: `translateX(-${tickerPosition}px)`, backgroundColor: darkMode ? 'black' : 'white' }}\n      >\n        {Object.keys(stockData).map((key) => {\n          const dataItem = stockData[key];\n          const value = (((dataItem[\"c\"] - dataItem[\"o\"]) / dataItem[\"o\"]) * 100).toFixed(2);\n\n          return <Company key={key} name={key} value={value} darkMode={darkMode} />;\n        })\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default TickerTape;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,UAAUA,CAAC;EAAEC,SAAS;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC3C,MAAMC,SAAS,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAMa,WAAW,GAAG,GAAG,CAAC,CAAC;EACzB,MAAMC,WAAW,GAAGC,MAAM,CAACC,UAAU;EAErCf,SAAS,CAAC,MAAM;IACd,MAAMgB,MAAM,GAAGP,SAAS,CAACQ,OAAO;IAChC,IAAIC,gBAAgB;IAEpBP,iBAAiB,CAACE,WAAW,CAAC;IAE9B,MAAMM,oBAAoB,GAAGA,CAAA,KAAM;MACjCR,iBAAiB,CAAES,YAAY,IAAK;QAClC,MAAMC,WAAW,GAAGD,YAAY,GAAG,CAAC;QACpC,OAAOC,WAAW,IAAI,CAACT,WAAW,GAAGA,WAAW,GAAGS,WAAW;MAChE,CAAC,CAAC;MAEFH,gBAAgB,GAAGI,qBAAqB,CAACH,oBAAoB,CAAC;IAChE,CAAC;IAEDA,oBAAoB,CAAC,CAAC;IAEtB,OAAO,MAAM;MACXI,oBAAoB,CAACL,gBAAgB,CAAC;IACxC,CAAC;EACH,CAAC,EAAE,CAACZ,SAAS,EAAEO,WAAW,CAAC,CAAC,CAAC,CAAC;;EAE9B,oBACET,OAAA;IAAKoB,SAAS,EAAC,kBAAkB;IAACC,KAAK,EAAE;MAAEC,eAAe,EAAEnB,QAAQ,GAAG,OAAO,GAAG;IAAQ,CAAE;IAAAoB,QAAA,eACzFvB,OAAA;MACEwB,GAAG,EAAEnB,SAAU;MACfe,SAAS,EAAC,QAAQ;MAClBC,KAAK,EAAE;QAAEI,SAAS,EAAG,eAAcnB,cAAe,KAAI;QAAEgB,eAAe,EAAEnB,QAAQ,GAAG,OAAO,GAAG;MAAQ,CAAE;MAAAoB,QAAA,EAEvGG,MAAM,CAACC,IAAI,CAACzB,SAAS,CAAC,CAAC0B,GAAG,CAAEC,GAAG,IAAK;QACnC,MAAMC,QAAQ,GAAG5B,SAAS,CAAC2B,GAAG,CAAC;QAC/B,MAAME,KAAK,GAAG,CAAE,CAACD,QAAQ,CAAC,GAAG,CAAC,GAAGA,QAAQ,CAAC,GAAG,CAAC,IAAIA,QAAQ,CAAC,GAAG,CAAC,GAAI,GAAG,EAAEE,OAAO,CAAC,CAAC,CAAC;QAElF,oBAAOhC,OAAA,CAACF,OAAO;UAAWmC,IAAI,EAAEJ,GAAI;UAACE,KAAK,EAAEA,KAAM;UAAC5B,QAAQ,EAAEA;QAAS,GAAjD0B,GAAG;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgD,CAAC;MAC3E,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjC,EAAA,CA7CQH,UAAU;AAAAqC,EAAA,GAAVrC,UAAU;AA+CnB,eAAeA,UAAU;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}