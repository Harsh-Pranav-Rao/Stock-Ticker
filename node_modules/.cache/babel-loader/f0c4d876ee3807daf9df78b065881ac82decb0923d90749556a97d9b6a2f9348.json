{"ast":null,"code":"var _jsxFileName = \"/Users/pranav/Desktop/Stock Ticker 0/frontend/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TickerTape from './components/tickerTape/TickerTape';\nimport './App.css';\nimport sectors from './sectorData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [stockData, setStockData] = useState([]);\n  const [stockDataKeys, setStockDataKeys] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [darkMode, setDarkMode] = useState(false);\n  const [selectedSector, setSelectedSector] = useState('');\n  const [isFetching, setIsFetching] = useState(false);\n  console.log(stockData);\n  useEffect(() => {\n    console.log(\"in use effect\");\n    fetch(`/api`).then(response => response.json()).then(data => {\n      let dkey = Object.keys(data);\n      setStockData(data);\n      setStockDataKeys(dkey);\n      setIsLoading(false);\n      console.log(stockData);\n      console.log(stockDataKeys);\n    });\n  }, []);\n  function handleButtonClick(sectorName) {\n    console.log(\"Button clicked with sector:\", sectorName);\n    setIsFetching(true);\n\n    // Fetch data for the selected sector\n    fetch(`/api?sector=${sectorName}`).then(response => response.json()).then(data => {\n      let dkey = Object.keys(data);\n      setStockData(data);\n      setStockDataKeys(dkey);\n      setIsLoading(false);\n      setIsFetching(false);\n      console.log(stockData);\n      console.log(stockDataKeys);\n    });\n  }\n  function handleDropdownChange(event) {\n    const selectedOption = event.target.value;\n    setSelectedSector(selectedOption); // Update the selected sector when an option is selected\n    handleButtonClick(selectedOption); // Trigger the function with the selected sector\n  }\n\n  const bodyStyle = {\n    backgroundColor: darkMode ? 'black' : 'white'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: bodyStyle,\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Dropdown\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          style: {\n            backgroundColor: darkMode ? \"black\" : \"white\",\n            color: darkMode ? \"white\" : \"black\",\n            borderColor: darkMode ? \"white\" : \"black\"\n          },\n          onChange: handleDropdownChange,\n          value: selectedSector,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Top 5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), sectors.map(sector => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: sector,\n            children: sector\n          }, sector, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          borderColor: darkMode ? \"white\" : \"black\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), isFetching ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(TickerTape, {\n          className: \"tickerTape\",\n          stockDataKeys: stockDataKeys,\n          stockData: stockData,\n          darkMode: darkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          borderColor: darkMode ? \"white\" : \"black\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"DMbutton\",\n        onClick: () => {\n          setDarkMode(prev => !prev);\n          console.log(darkMode);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"material-icons\",\n          children: [darkMode ? 'wb_sunny' : 'brightness_3', \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jmWwdN+tulgkvKGAEW0NVW3aJiA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TickerTape","sectors","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","stockData","setStockData","stockDataKeys","setStockDataKeys","isLoading","setIsLoading","darkMode","setDarkMode","selectedSector","setSelectedSector","isFetching","setIsFetching","console","log","fetch","then","response","json","data","dkey","Object","keys","handleButtonClick","sectorName","handleDropdownChange","event","selectedOption","target","value","bodyStyle","backgroundColor","style","children","className","fileName","_jsxFileName","lineNumber","columnNumber","color","borderColor","onChange","map","sector","onClick","prev","_c","$RefreshReg$"],"sources":["/Users/pranav/Desktop/Stock Ticker 0/frontend/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TickerTape from './components/tickerTape/TickerTape';\nimport './App.css';\nimport sectors from './sectorData';\n\nfunction App() {\n  const [stockData, setStockData] = useState([]);\n  const [stockDataKeys, setStockDataKeys] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [darkMode,setDarkMode] = useState(false)\n  const [selectedSector, setSelectedSector] = useState('');\n  const [isFetching, setIsFetching] = useState(false); \n  console.log(stockData)\n\n\n  useEffect(() => {\n    console.log(\"in use effect\")\n    fetch(`/api`)\n      .then(response => response.json())\n      .then(data => {\n        let dkey = Object.keys(data);\n        setStockData(data);\n        setStockDataKeys(dkey);\n        setIsLoading(false);\n        console.log(stockData)\n        console.log(stockDataKeys)\n      });\n  }, []);\n\n\n  function handleButtonClick(sectorName) {\n    console.log(\"Button clicked with sector:\", sectorName);\n\n    setIsFetching(true);\n    \n    // Fetch data for the selected sector\n    fetch(`/api?sector=${sectorName}`)\n      .then(response => response.json())\n      .then(data => {\n        let dkey = Object.keys(data);\n        setStockData(data);\n        setStockDataKeys(dkey);\n        setIsLoading(false);\n        setIsFetching(false);\n        console.log(stockData)\n        console.log(stockDataKeys)\n      });\n  }\n\n  function handleDropdownChange(event) {\n    const selectedOption = event.target.value;\n    setSelectedSector(selectedOption); // Update the selected sector when an option is selected\n    handleButtonClick(selectedOption); // Trigger the function with the selected sector\n  }\n\n  const bodyStyle = {\n    backgroundColor: darkMode ? 'black' : 'white',\n  };\n  \n\n\n  return (\n    <div style={bodyStyle}>\n      {isLoading ? (\n        <div className=\"loader\"></div>\n      ) : (\n        <div className=\"app-container\">\n          <div className='Dropdown'>\n            <select style={{ backgroundColor: darkMode ? \"black\" : \"white\", color: darkMode ? \"white\" : \"black\", borderColor: darkMode ? \"white\" : \"black\" }} onChange={handleDropdownChange} value={selectedSector}>\n              <option value=\"\">Top 5</option>\n              {sectors.map(sector => (\n                <option key={sector} value={sector}>{sector}</option>\n              ))}\n            </select>\n          </div>\n\n          <hr style={{ borderColor: darkMode ? \"white\" : \"black\" }} />\n          {isFetching ? (\n            <div className=\"loader\"></div>\n          ) : (\n            <>\n              <TickerTape\n                className=\"tickerTape\"\n                stockDataKeys={stockDataKeys}\n                stockData={stockData}\n                darkMode={darkMode}\n              />\n            </>\n          )}\n          <hr style={{ borderColor: darkMode ? \"white\" : \"black\" }} />\n          <button className=\"DMbutton\" onClick={() => { setDarkMode(prev => !prev); console.log(darkMode) }}>\n            <i className=\"material-icons\">\n              {darkMode ? 'wb_sunny' : 'brightness_3'} {/* Use 'wb_sunny' for sun icon and 'brightness_3' for moon icon */}\n            </i>\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}